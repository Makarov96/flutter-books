name: GA-COMBINE-FLUTTER
permissions: write-all

# on:
#   pull_request:
#     types: [closed]
#     branches: [develop]

on:
  push:
    branches: [main]

jobs:
  flutter-masters-build-ios:
    runs-on: macos-latest
    env:
      dev_token_var: ${{vars.TOKEN}}
      dev_token_secret: ${{secrets.TOKEN}}
      dev_foo_secret: ${{secrets.FOO}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      - name: Called Dependencies
        run: flutter pub get

      - name: ios pod repo update
        run: pod repo update
        working-directory: ios

      - name: create env directory
        run: |
          mkdir -p env/ && cp -R dist env/
          ls env/

      - name: create dev.json into env
        run: |
          echo "foo":${{env.dev_foo_secret}} > env/dev.json

      - name: build ipa file
        run: flutter build ipa --no-codesign --dart-define-from-file=env/dev.json

      - name: Compress Archives and IPAs
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios_build.tar.gz
          tag: v1.0
          overwrite: true

  flutter-masters-build-apk-on-ubuntu:
    runs-on: ubuntu-latest
    env:
      vars_token_production: ${{vars.TOKEN}}
      secrets_token_production: ${{secrets.TOKEN}}
      secrets_foo_production: ${{secrets.FOO}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: install java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Called Dependencies
        run: flutter pub get

      - name: create env directory
        run: mkdir env && -R cp dist env && ls env

      - name: create prod.json into prod
        run: |
          echo "foo":${{env.secrets_foo_production}} > env/prod.json

      - name: build apk
        run: flutter build apk --release --dart-define-from-file=env/prod.json

      - name: build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/apk/release/app-release.apk
          tag: v1.0
          overwrite: true
